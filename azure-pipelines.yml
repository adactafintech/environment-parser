# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
name: "Environment Parser"

trigger:
  branches:
    include:
      - master
  tags:
    include:
      - refs/tags/*

pool:
  vmImage: ubuntu-latest

stages:
- stage: test
  displayName: Test
  jobs:
    - job: pytest
      displayName: 'Run tests'
      strategy:
        matrix:
          Python38:
            python.version: '3.8'
          Python39:
            python.version: '3.9'
          Python310:
            python.version: '3.10'
      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
        displayName: 'Use Python $(python.version)'

      - script: |
          python -m pip install --upgrade pip
          pip install -e '.[dev]'
        displayName: 'Install dependencies'

      - script: |
          pip install pytest pytest-azurepipelines
          pytest
        displayName: 'pytest'

- stage: publish
  displayName: 'Package and Publish'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  jobs:
    - job: package_and_publish_test
      displayName: 'Package and publish'
      steps:
        - script: |
            pip install build twine
          displayName: "Install build and publish tools"

        - script: |
            rm -rf dist/* adi_env_parser.egg-info adi_env_parser/_version.py
            python -m build
          displayName: "Build wheel package"

        - task: TwineAuthenticate@1
          displayName: "Authenticate with PyPI test"
          inputs:
            pythonUploadServiceConnection: pypitest

        - script: |
            python -m twine upload -r pypitest --verbose --config-file $(PYPIRC_PATH) dist/*.whl
          displayName: "Publish package"

    - job: package_and_publish_prod
      displayName: 'Package and publish'
      timeoutInMinutes: 4320
      steps:
        - task: ManualValidation@0
          inputs:
            instructions: "Confirm publish to production PyPI repository"
            notifyUsers: |
              jernej.kladnik@adacta-fintech.com
              blaz.balon@adacta-fintech.com
            onTimeout: reject
          timeoutInMinutes: 4200
        - script: |
            pip install build twine
          displayName: "Install build and publish tools"

        - script: |
            rm -rf dist/* adi_env_parser.egg-info adi_env_parser/_version.py
            python -m build
          displayName: "Build wheel package"

        - task: TwineAuthenticate@1
          displayName: "Authenticate with PyPI"
          inputs:
            pythonUploadServiceConnection: pypi

        - script: |
            cat $(PYPIRC_PATH)
            python -m twine upload -r pypi --verbose --config-file $(PYPIRC_PATH) dist/*.whl
          displayName: "Publish package"
